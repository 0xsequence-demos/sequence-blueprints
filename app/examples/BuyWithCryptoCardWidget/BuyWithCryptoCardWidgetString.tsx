export const codeString = "import { usePublicClient, useWalletClient, useAccount } from \"wagmi\";\nimport { ContractInfo } from \"@0xsequence/metadata\";\nimport { useERC1155SaleContractCheckout } from \"@0xsequence/kit-checkout\";\ninterface BuyWithCryptoCardWidgetProps {\n  tokenId: string;\n  chainId: number;\n  amount: number;\n  userPaymentCurrencyBalance: bigint | undefined;\n  price: bigint;\n  currencyData: ContractInfo | undefined;\n  salesContractAddress: string;\n  nftTokenAddress: string;\n  setSuccessfulTxHash: (txHash: string) => void;\n}\nexport const BuyWithCryptoCardWidget = ({\n  tokenId,\n  chainId,\n  amount,\n  userPaymentCurrencyBalance,\n  price,\n  currencyData,\n  salesContractAddress,\n  nftTokenAddress,\n  setSuccessfulTxHash,\n}: BuyWithCryptoCardWidgetProps) => {\n  const publicClient = usePublicClient();\n  const { data: walletClient } = useWalletClient();\n  const { address: userAddress } = useAccount();\n  const { openCheckoutModal } = useERC1155SaleContractCheckout({\n    chain: chainId,\n    contractAddress: salesContractAddress,\n    wallet: userAddress!,\n    collectionAddress: nftTokenAddress,\n    items: [\n      {\n        tokenId: String(tokenId),\n        quantity: String(amount),\n      },\n    ],\n    onSuccess: setSuccessfulTxHash,\n    onError: (error: Error) => {\n      console.error(error);\n    },\n  });\n  const nftPriceBigInt = price ? price : BigInt(0);\n  const amountBigInt = BigInt(amount);\n  const totalPrice = nftPriceBigInt * amountBigInt;\n  const onClickBuy = async () => {\n    if (\n      !publicClient ||\n      !walletClient ||\n      !userAddress ||\n      !currencyData ||\n      amount <= 0 ||\n      !userPaymentCurrencyBalance?.toString() ||\n      userPaymentCurrencyBalance < totalPrice\n    ) {\n      return;\n    }\n    openCheckoutModal();\n  };\n  const hasNsf =\n    userPaymentCurrencyBalance?.toString() &&\n    (userPaymentCurrencyBalance?.toString() === \"0\" ||\n      userPaymentCurrencyBalance < totalPrice);\n  return (\n    <>\n      <button\n        data-nsf={hasNsf}\n        className=\"rounded-[0.5rem] w-full font-bold text-14 data-[nsf=true]:opacity-50\"\n        onClick={onClickBuy}\n      >\n        {hasNsf ? \"Insufficient funds\" : \"Buy\"}\n      </button>\n    </>\n  );\n};"